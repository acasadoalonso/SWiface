---

- name: Create a network with custom IPAM config
  community.general.docker_network:
    name: mynetsql
    state: present
    ipam_config:
      - subnet: 172.17.0.0/24
        iprange: 172.17.0.0/26

- name: Run a MARIADB MySQL container.
  docker_container:
    image: mariadb:latest
    name: mariadb
    state: started
    restart: yes
    ports: "3306:3306"
    #container_default_behaviour: no_defaults
    env:
      MYSQL_ROOT_PASSWORD: ogn
      MYSQL_DATABASE: SWIFACE
      MYSQL_USER: ogn
      MYSQL_PASSWORD: ogn
    network_mode: mynetsql
    networks:
      - name: mynetsql
        ipv4_address: 172.17.0.2
    networks_cli_compatible: yes

- name: Replace entry MARIADB
  ansible.builtin.lineinfile:
    path: /etc/hosts
    regexp: 'mariadb'
    line: 172.17.0.2 mariadb
    owner: root
    group: root
    mode: '0644'

- name: Check whether if the /nfs/hosts is already there
  command: grep -Fxq "# CASADODOM" /etc/hosts
  register: checkhosts
  check_mode: no
  ignore_errors: yes
  changed_when: no

- name: Add /nfs/hosts to /etc/hosts
  command: cat /nfs/hosts >> /etc/hosts
  when: checkhosts.rc == 0

- name: Run a PHPMYADMIN container.
  docker_container:
    image: phpmyadmin:latest
    name: phpmyadmin
    state: present
    network_mode: mynetsql
    networks:
      - name: mynetsql
        ipv4_address: 172.17.0.3

# Copy database dump file to remote host and restore it to database 'my_db'
- name: Copy database dump file
  copy:
     src: "../SWIFACE.sql"
     dest: /tmp
- name: Copy adduser file
  copy:
     src: "../doc/adduser.sql"
     dest: /tmp
- name: Copy SWIFACE shell file
  copy:
     src: "./SWIFACE.sh"
     dest: /tmp
- name: Copy GLIDERS shell file
  copy:
     src: "./GLIDERS.sh"
     dest: /tmp/GLIDERS.sh
- name: Copy ADDUSER shell file
  copy:
     src: "./ADDUSER.sh"
     dest: /tmp/ADDUSER.sh
- name: Copy MariaDB conf
  become: no
  copy:
     src:  "~/.my.cnf"
     dest: "~/.my.cnf"

- name: Restore database
  command: "bash /tmp/SWIFACE.sh"

- name: Download GLIDERS.sql
  get_url:
    url: http://acasado.es:60080/files/GLIDERS.sql
    dest: /tmp/GLIDERS.sql
    mode: '0440'

- name: Restore database table GLIDERS.sql
  command: "bash /tmp/GLIDERS.sh" 

- name: Create a /etc/local directory
  file:
    path: /etc/local
    state: directory
    mode: '0755'

- name: Copy 
  copy:
     src: "../config.template"
     dest: /etc/local/SWSconfig.ini

- name: Create a /nfs directories
  file:
    path: /nfs/OGN/DIRdata
    state: directory
    mode: '0755'

- name: Give permissions to the log file
  file:
    path: /var/log/syslog
    owner: root
    group: root
    mode: '1755'

